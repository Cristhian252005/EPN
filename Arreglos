//algoritmos de ordenacion
//quick sort, bublle sort, seletion sort, insertion sort, merge sort

#include <iostream>

using namespace std;

//METODO DE BURBUJA
void burbuja(int arr[], int TamañoArreglo) { //reciebe el arreglo, y el tamaño del arreglo
    int k;
    for (int i = 1; i < TamañoArreglo; i++){
        for (int j = 0; i < TamañoArreglo-1; i++){
            if (a[j]>a[j+1]){
                k=a[j+1];
                a[j+1]=a[j];
                a[j] = k;
            }   
        }
    }
}


int main(){

    int arreglo[6];
    //int arreglo.sort();
    cout<<" ORDENARCACION "<<endl;
    for (int i = 0; i < 6; i++)
    {
        cout<<" Ingrese un numero: ",cin>>arreglo[i];
    }

    cout<<"\n Arreglo orden de burbuja "<<endl;
    burbuja(arreglo,6);
    for (int i = 0; i < 6; i++)
    {
        cout<<" "<<arreglo[i]<<"-";
    }

    cout<<"\t Elementos del arreglo: "<<endl;
    for (int i = 0; i < 6; i++)
    {
        cout<<" "<<arreglo[i]<<"-";
    }
    
    

    return 0;
}
---------------------------------------------------------------------------------------------------------------------------------------------
//algoritmos de ordenacion
//quick sort, bublle sort, seletion sort, insertion sort, merge sort

#include <iostream>

using namespace std;

//METODO DE BURBUJA
void burbuja(int a[], int TamañoArreglo) { //reciebe el arreglo, y el tamaño del arreglo
    int k;
    for (int i = 0; i < TamañoArreglo; i++){
        for (int j = 0; j< TamañoArreglo-1; j++){
            if (a[j]>a[j+1]){
                k =a[j+1];
                a[j+1] =a[j];
                a[j] = k;
            }   
        }
    }
}
//aun no funciona, revisar

//METODO DE SELECCION
void seleccion(int a[], int tamanio_arreglo){
    int menor, aux;
    for(int i = 0; i<tamanio_arreglo; i++){
        menor = i;
        for(int j=i+1; j<tamanio_arreglo;j++){
            if (a[menor]>a[j])
            {
                menor = j;
                aux = a[menor];
                a[menor] = a[i];
                a[i] = aux;                
            }
            
        }
    }
}


//METODO DE BUSQUEDA BIANRIA
int BusquedaBinaria(int a[], int tamanio, int clave){
    int Iarriba = tamanio-1;
    int Iabajo = 0;
    int Icentro;

    while(Iabajo <= Iarriba){
        Icentro = (Iarriba + Iabajo) / 2;
        if (a[Icentro]==clave){
            return Icentro;
        }else{
            if (clave < a[Icentro]){
                Iarriba = Icentro - 1;
            }else{
                Iabajo = Icentro + 1;
            }
        }  
    } 
    return -1;
}

int main(){
    /* 
    int clave = 0;
    int tamanio = 10;
    int arreglo[tamanio]={1,2,3,4,5,6,7,8,9,10};
    cout<<" Busqueda de un elmento en un arreglo "<<endl;
    for (int i = 0; i < tamanio; i++)
    {
        cout<<arreglo[i]<<" ";
    }
    cout<<" \nIngrese el numero a buscar: ",cin>>clave;
    cout<<" \nBusqueda binaria\n El elemento "<<clave<<" se encuentra en arreglo ["<<BusquedaBinaria(arreglo,tamanio,clave)<<"]";
    */
    int arreglo[6];
    //int arreglo.sort();
    cout<<" ORDENARCACION "<<endl;
    for (int i = 0; i < 6; i++)
    {
        cout<<" Ingrese un numero: ",cin>>arreglo[i];
    }

    cout<<"\n Arreglo orden de burbuja "<<endl;
    burbuja(arreglo,6);
    //seleccion(arreglo,6);
    for (int i = 0; i < 6; i++)
    {
        cout<<" "<<arreglo[i]<<"-";
    }
    cout<<" "<<endl;
    /*
    */

    return 0;
}
